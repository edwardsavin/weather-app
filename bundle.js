(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>u});var r=t(537),a=t.n(r),o=t(645),i=t.n(o),c=t(667),s=t.n(c),A=new URL(t(710),t.b),l=i()(a()),d=s()(A);l.push([n.id,':root {\n  --clr-50: hsl(204, 100%, 97%);\n  --clr-100: hsl(204, 94%, 94%);\n  --clr-200: hsl(201, 94%, 86%);\n  --clr-300: hsl(199, 95%, 74%);\n  --clr-400: hsl(198, 93%, 60%);\n  --clr-500: hsl(199, 89%, 48%);\n  --clr-600: hsl(200, 98%, 39%);\n  --clr-700: hsl(201, 96%, 32%);\n  --clr-800: hsl(201, 90%, 27%);\n  --clr-900: hsl(202, 80%, 24%);\n\n  --ff-primary: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui,\n    helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial,\n    sans-serif;\n\n  --ff-body: var(--ff-primary);\n  --ff-heading: var(--ff-primary);\n\n  --fw-light: 300;\n  --fw-regular: 400;\n  --fw-bold: 700;\n\n  --fs-200: 0.5rem;\n  --fs-300: 0.75rem;\n  --fs-350: 0.875rem;\n  --fs-400: 1rem;\n  --fs-450: 1.15rem;\n  --fs-500: 1.25rem;\n  --fs-600: 1.5rem;\n  --fs-650: 1.6rem;\n  --fs-700: 1.75rem;\n  --fs-800: 2rem;\n  --fs-900: 2.25rem;\n  --fs-1000: 2.5rem;\n  --fs-1100: 2.75rem;\n  --fs-1200: 3rem;\n  --fs-1600: 4rem;\n}\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\n* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role="list"],\nol[role="list"] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\n/* Set core body defaults */\nbody {\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don\'t have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture,\nsvg {\n  max-width: 100%;\n  display: block;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\nbody {\n  background-image: url(https://i.pinimg.com/originals/ff/4d/34/ff4d344d44981a5618deb925f0b8d381.gif);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  box-shadow: inset 0 0 300px rgba(28, 28, 28, 0.86);\n}\n\n#main {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n}\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 88vh;\n  max-height: 88vh;\n  width: 90vw;\n  max-width: 90vw;\n  background: hsla(0, 1%, 25%, 0.185);\n  border: 1px solid rgba(85, 85, 87, 0.252);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px 2px rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  overflow: hidden;\n}\n\n.content-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-height: 80vh;\n  max-width: 82vw;\n  font-size: var(--fs-500);\n}\n\n.search-results-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2em;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  font-size: var(--fs-600);\n  font-weight: var(--fw-bold);\n  color: var(--clr-200);\n}\n\n.unit-switcher {\n  cursor: pointer;\n  margin-top: 1em;\n  padding: 0.2em 0.4em;\n  font-size: var(--fs-400);\n  color: var(--clr-300);\n  background: rgba(233, 235, 240, 0.2);\n  border-radius: 4px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.search-bar-container {\n  padding-top: 0.1em;\n  padding-bottom: 0.1em;\n  padding-left: 0.3em;\n  font-size: var(--fs-500);\n  background: rgba(233, 235, 240, 0.2);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n}\n\n.search-input {\n  color: var(--clr-200);\n  border: none;\n  background: transparent;\n}\n\n.search-input::placeholder {\n  font-weight: var(--fw-light);\n  color: var(--clr-300);\n}\n\n.search-button {\n  text-indent: -999px;\n  overflow: hidden;\n  width: 40px;\n  padding: 0;\n  margin: 0;\n  border: 1px solid transparent;\n  border-radius: inherit;\n  background: transparent\n    url('+d+")\n    no-repeat center;\n  cursor: pointer;\n  opacity: 0.7;\n}\n\n.search-button:hover {\n  opacity: 1;\n}\n\n.search-button:focus,\n.search-input:focus {\n  box-shadow: 0 0 3px 0 var(--clr-700);\n  border-color: var(--clr-700);\n  outline: none;\n}\n\n.search-error {\n  color: var(--clr-200);\n  font-size: var(--fs-400);\n  max-width: 70%;\n  margin-top: 1em;\n}\n\n.main-wrapper {\n  padding: 0.6em;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 6px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.first-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.second-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.third-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.description-and-icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root {\n  --clr-50: hsl(204, 100%, 97%);\n  --clr-100: hsl(204, 94%, 94%);\n  --clr-200: hsl(201, 94%, 86%);\n  --clr-300: hsl(199, 95%, 74%);\n  --clr-400: hsl(198, 93%, 60%);\n  --clr-500: hsl(199, 89%, 48%);\n  --clr-600: hsl(200, 98%, 39%);\n  --clr-700: hsl(201, 96%, 32%);\n  --clr-800: hsl(201, 90%, 27%);\n  --clr-900: hsl(202, 80%, 24%);\n\n  --ff-primary: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui,\n    helvetica neue, helvetica, Cantarell, Ubuntu, roboto, noto, arial,\n    sans-serif;\n\n  --ff-body: var(--ff-primary);\n  --ff-heading: var(--ff-primary);\n\n  --fw-light: 300;\n  --fw-regular: 400;\n  --fw-bold: 700;\n\n  --fs-200: 0.5rem;\n  --fs-300: 0.75rem;\n  --fs-350: 0.875rem;\n  --fs-400: 1rem;\n  --fs-450: 1.15rem;\n  --fs-500: 1.25rem;\n  --fs-600: 1.5rem;\n  --fs-650: 1.6rem;\n  --fs-700: 1.75rem;\n  --fs-800: 2rem;\n  --fs-900: 2.25rem;\n  --fs-1000: 2.5rem;\n  --fs-1100: 2.75rem;\n  --fs-1200: 3rem;\n  --fs-1600: 4rem;\n}\n\n/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default margin */\n* {\n  margin: 0;\n  padding: 0;\n  font: inherit;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\nhtml,\nbody {\n  height: 100%;\n}\n\n/* Set core body defaults */\nbody {\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture,\nsvg {\n  max-width: 100%;\n  display: block;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\nbody {\n  background-image: url(https://i.pinimg.com/originals/ff/4d/34/ff4d344d44981a5618deb925f0b8d381.gif);\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  box-shadow: inset 0 0 300px rgba(28, 28, 28, 0.86);\n}\n\n#main {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n}\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 88vh;\n  max-height: 88vh;\n  width: 90vw;\n  max-width: 90vw;\n  background: hsla(0, 1%, 25%, 0.185);\n  border: 1px solid rgba(85, 85, 87, 0.252);\n  border-radius: 16px;\n  box-shadow: 0 4px 30px 2px rgba(0, 0, 0, 0.3);\n  backdrop-filter: blur(4px);\n  -webkit-backdrop-filter: blur(4px);\n  overflow: hidden;\n}\n\n.content-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-height: 80vh;\n  max-width: 82vw;\n  font-size: var(--fs-500);\n}\n\n.search-results-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 2em;\n  margin-top: 1em;\n  margin-bottom: 1em;\n  font-size: var(--fs-600);\n  font-weight: var(--fw-bold);\n  color: var(--clr-200);\n}\n\n.unit-switcher {\n  cursor: pointer;\n  margin-top: 1em;\n  padding: 0.2em 0.4em;\n  font-size: var(--fs-400);\n  color: var(--clr-300);\n  background: rgba(233, 235, 240, 0.2);\n  border-radius: 4px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.search-bar-container {\n  padding-top: 0.1em;\n  padding-bottom: 0.1em;\n  padding-left: 0.3em;\n  font-size: var(--fs-500);\n  background: rgba(233, 235, 240, 0.2);\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n}\n\n.search-input {\n  color: var(--clr-200);\n  border: none;\n  background: transparent;\n}\n\n.search-input::placeholder {\n  font-weight: var(--fw-light);\n  color: var(--clr-300);\n}\n\n.search-button {\n  text-indent: -999px;\n  overflow: hidden;\n  width: 40px;\n  padding: 0;\n  margin: 0;\n  border: 1px solid transparent;\n  border-radius: inherit;\n  background: transparent\n    url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' class='bi bi-search' viewBox='0 0 16 16'%3E%3Cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'%3E%3C/path%3E%3C/svg%3E\")\n    no-repeat center;\n  cursor: pointer;\n  opacity: 0.7;\n}\n\n.search-button:hover {\n  opacity: 1;\n}\n\n.search-button:focus,\n.search-input:focus {\n  box-shadow: 0 0 3px 0 var(--clr-700);\n  border-color: var(--clr-700);\n  outline: none;\n}\n\n.search-error {\n  color: var(--clr-200);\n  font-size: var(--fs-400);\n  max-width: 70%;\n  margin-top: 1em;\n}\n\n.main-wrapper {\n  padding: 0.6em;\n  background: rgba(255, 255, 255, 0.2);\n  border-radius: 6px;\n  box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n  backdrop-filter: blur(5px);\n  -webkit-backdrop-filter: blur(5px);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\n\n.first-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 0.3em;\n}\n\n.second-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.third-wrapper {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.description-and-icon-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 1px;\n}\n"],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],l=o[A]||0,d="".concat(A," ").concat(l);o[A]=l+1;var u=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=a(p,r);r.byIndex=c,e.splice(c,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=r(n,a),A=0;A<o.length;A++){var l=t(o[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},710:n=>{n.exports="data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 width=%2716%27 height=%2716%27 class=%27bi bi-search%27 viewBox=%270 0 16 16%27%3E%3Cpath d=%27M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z%27%3E%3C/path%3E%3C/svg%3E"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),i=t.n(o),c=t(565),s=t.n(c),A=t(216),l=t.n(A),d=t(589),u=t.n(d),p=t(426),f={};f.styleTagTransform=u(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=a(),f.insertStyleElement=l(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var m=function(n,e,t,r){return new(t||(t=Promise))((function(a,o){function i(n){try{s(r.next(n))}catch(n){o(n)}}function c(n){try{s(r.throw(n))}catch(n){o(n)}}function s(n){var e;n.done?a(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,c)}s((r=r.apply(n,e||[])).next())}))},h=function(n,e){var t,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function c(c){return function(s){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,c[0]&&(i=0)),i;)try{if(t=1,r&&(a=2&c[0]?r.return:c[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,c[1])).done)return a;switch(r=0,a&&(c=[2&c[0],a.value]),c[0]){case 0:case 1:a=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,r=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!a||c[1]>a[0]&&c[1]<a[3])){i.label=c[1];break}if(6===c[0]&&i.label<a[1]){i.label=a[1],a=c;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(c);break}a[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(n){c=[6,n],r=0}finally{t=a=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}};function C(n){return m(this,void 0,void 0,(function(){var e;return h(this,(function(t){switch(t.label){case 0:return[4,fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat(n,"&APPID=1aaa95c01bd86f296f84339c8c5057fa&units=metric"),{mode:"cors"})];case 1:return[4,t.sent().json()];case 2:return[2,{location:(e=t.sent()).name,country:e.sys.country,description:e.weather[0].description,icon:e.weather[0].icon,temperature:e.main.temp,feelsLike:e.main.feels_like,humidity:e.main.humidity,windSpeed:e.wind.speed}]}}))}))}function B(n){return m(this,void 0,void 0,(function(){var e;return h(this,(function(t){switch(t.label){case 0:return[4,fetch("https://api.openweathermap.org/data/2.5/weather?q=".concat(n,"&APPID=1aaa95c01bd86f296f84339c8c5057fa&units=imperial"),{mode:"cors"})];case 1:return[4,t.sent().json()];case 2:return[2,{location:(e=t.sent()).name,country:e.sys.country,description:e.weather[0].description,icon:e.weather[0].icon,temperature:e.main.temp,feelsLike:e.main.feels_like,humidity:e.main.humidity,windSpeed:e.wind.speed}]}}))}))}const E=function(n){return m(this,void 0,void 0,(function(){var e,t,r;return h(this,(function(a){switch(a.label){case 0:return a.trys.push([0,3,,4]),[4,C(n)];case 1:return e=a.sent(),[4,B(n)];case 2:return t=a.sent(),[2,{metricTemperature:e,imperialTemperature:t}];case 3:throw r=a.sent(),o=document.querySelector(".content-wrapper"),i=document.querySelector(".search-bar-container"),(c=document.createElement("div")).classList.add("search-error"),c.textContent="Cannot find this location. To make search more precise, please put the city's name, comma, 2-letter country code (ISO3166).",null==o||o.insertBefore(c,null==i?void 0:i.nextSibling),new Error(r);case 4:return[2]}var o,i,c}))}))};var b,v,g,x,w,y,k;function S(n,e,t,r,a,o,i){var c=document.querySelector(".weather-temperature"),s=document.querySelector(".weather-feels-like"),A=document.querySelector(".weather-humidity"),l=document.querySelector(".weather-wind-speed"),d=document.querySelector(".unit-switcher").getAttribute("data-unit");b=n,v=e,g=t,x=r,w=a,y=o,k=i,"metric"===d?(c.textContent="".concat(n," °C"),s.textContent="Feels Like: ".concat(t," °C"),A.textContent="Humidity: ".concat(a," %"),l.textContent="Wind Speed: ".concat(o," m/s")):(c.textContent="".concat(e," °F"),s.textContent="Feels Like: ".concat(r," °F"),l.textContent="Wind Speed: ".concat(i," mph"))}function L(){var n=document.querySelector(".unit-switcher").getAttribute("data-unit");return S(b,v,g,x,w,y,k),n}var j="London";function q(n,e,t,r,a,o,i,c){var s=document.querySelector(".search-results-container"),A=function(n){var e=document.createElement("div");return e.classList.add("weather-location"),e.textContent=n,e}(n),l=function(n){var e=document.createElement("div");e.classList.add("weather-country");var t,r=(t=n.toUpperCase().split("").map((function(n){return 127397+n.charCodeAt(0)})),String.fromCodePoint.apply(String,t));return e.textContent=r,e}(e),d=function(n){var e=document.createElement("div");return e.classList.add("weather-description"),e.textContent=n,e}(t),u=function(n){var e=document.createElement("div");e.classList.add("weather-icon-container");var t=document.createElement("img");return t.classList.add("weather-icon"),t.src="https://openweathermap.org/img/wn/".concat(n,".png"),e.append(t),e}(r),p=document.createElement("div");p.classList.add("description-and-icon-container"),p.append(u,d);var f=function(n){var e=document.createElement("div");return e.classList.add("weather-temperature"),e.textContent="".concat(n," °C"),e}(a),m=function(n){var e=document.createElement("div");return e.classList.add("weather-feels-like"),e.textContent="Feels like: ".concat(n," °C"),e}(o),h=function(n){var e=document.createElement("div");return e.classList.add("weather-humidity"),e.textContent="Humidity: ".concat(n," %"),e}(i),C=function(n){var e=document.createElement("div");return e.classList.add("weather-wind-speed"),e.textContent="Wind Speed: ".concat(n," km/h"),e}(c),B=document.createElement("div");B.classList.add("first-wrapper"),B.append(l,A);var E=document.createElement("div");E.classList.add("second-wrapper"),E.append(f,p);var b=document.createElement("div");b.classList.add("main-wrapper"),b.append(B,E);var v=document.createElement("div");v.classList.add("third-wrapper"),v.append(m,h,C),s.append(b,v)}function z(){document.querySelector(".search-results-container").innerHTML=""}function M(n){j=n}function T(n){return e=this,t=void 0,a=function(){var e,t,r,a,o,i,c,s,A,l,d,u,p,f,m,h,C;return function(n,e){var t,r,a,o,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function c(c){return function(s){return function(c){if(t)throw new TypeError("Generator is already executing.");for(;o&&(o=0,c[0]&&(i=0)),i;)try{if(t=1,r&&(a=2&c[0]?r.return:c[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,c[1])).done)return a;switch(r=0,a&&(c=[2&c[0],a.value]),c[0]){case 0:case 1:a=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,r=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!a||c[1]>a[0]&&c[1]<a[3])){i.label=c[1];break}if(6===c[0]&&i.label<a[1]){i.label=a[1],a=c;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(c);break}a[2]&&i.ops.pop(),i.trys.pop();continue}c=e.call(n,i)}catch(n){c=[6,n],r=0}finally{t=a=0}if(5&c[0])throw c[1];return{value:c[0]?c[1]:void 0,done:!0}}([c,s])}}}(this,(function(B){switch(B.label){case 0:return B.trys.push([0,2,,4]),[4,E(n)];case 1:return t=B.sent(),e=t,M(n),[3,4];case 2:return B.sent(),[4,E(j)];case 3:return r=B.sent(),e=r,M(j),[3,4];case 4:return a=Object(e),o=Object(a.metricTemperature),i=Object(a.imperialTemperature),c=o.location,s=o.country,A=o.description,l=o.icon,d=Math.round(o.temperature),u=Math.round(o.feelsLike),p=Math.round(o.humidity),f=Math.round(o.windSpeed),m=Math.round(i.temperature),h=Math.round(i.feelsLike),C=Math.round(i.windSpeed),q(c,s,A,l,d,u,p,f),S(d,m,u,h,p,f,C),[2]}}))},new((r=void 0)||(r=Promise))((function(n,o){function i(n){try{s(a.next(n))}catch(n){o(n)}}function c(n){try{s(a.throw(n))}catch(n){o(n)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(n){n(t)}))).then(i,c)}s((a=a.apply(e,t||[])).next())}));var e,t,r,a}T("London"),function(){var n=document.getElementById("main"),e=document.createElement("div");e.classList.add("main-container");var t=document.createElement("div");t.classList.add("content-wrapper");var r=function(){var n=document.createElement("div");n.classList.add("search-bar-container");var e,t=((e=document.createElement("input")).classList.add("search-input"),e.setAttribute("type","text"),e.setAttribute("placeholder","Search a location..."),e),r=function(){var n=document.createElement("button");return n.classList.add("search-button"),n.setAttribute("type","submit"),n.textContent="Search",n}();return t.addEventListener("keyup",(function(n){var e;"Enter"===n.key&&((e=document.querySelector(".search-error"))&&e.remove(),z(),T(t.value))})),r.addEventListener("click",(function(){z(),T(t.value)})),n.appendChild(t),n.appendChild(r),n}(),a=function(){var n=document.createElement("div");return n.classList.add("search-results-container"),n}(),o=function(){var n=document.createElement("div"),e=document.createElement("button");return e.classList.add("unit-switcher"),e.dataset.unit="metric",e.textContent="Show Fahrenheit",e.addEventListener("click",(function(){"metric"===e.dataset.unit?(e.dataset.unit="imperial",e.textContent="Show Celsius",L()):(e.dataset.unit="metric",e.textContent="Show Fahrenheit",L())})),n.appendChild(e),e}();t.appendChild(r),t.appendChild(o),t.appendChild(a),e.appendChild(t),n.appendChild(e)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,